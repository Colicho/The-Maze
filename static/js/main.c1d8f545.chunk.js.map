{"version":3,"sources":["components/header.js","components/mainComp/theGame.js","components/main.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","game","undefined","Vertex","node","this","connections","distance","visited","previousNode","neighbor","push","previous","Graph","vertexDict","vertices","newVertex","frm","to","addVertex","addConnection","Maze","width","height","matrix","unvisitedNodes","row","column","rnd","Math","random","document","getElementById","style","gridTemplateColumns","gridTemplateRows","includes","item","i","length","x","square","createElement","appendChild","fastestRoute","bestRoute","getMaze","position","userMoves","g","index","rounding","floor","newPosition","validInput","addEdge","djikstra","graph","startNode","setDistance","vertex","setPreviousNode","queue","setVisited","shift","validMoves","userInput","getValidMoves","pop","func","Begin","myNode","firstChild","removeChild","display","getGame","gridColumn","Direction","dir","positionNotChanged","innerHTML","visibility","Main","props","id","onClick","Footer","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.c1d8f545.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header(){\r\n    return(\r\n        <div className=\"header\">\r\n            The Maze \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","var game = undefined;\r\n\r\nclass Vertex{\r\n    constructor(node){\r\n        this.node = node;\r\n        this.connections = [];\r\n        this.distance = 9007199254740992\r\n        this.visited = false;\r\n        this.previousNode = null;\r\n    }\r\n    addConnection(neighbor){\r\n        this.connections.push(neighbor)       \r\n    }\r\n    setDistance(distance){\r\n        this.distance = distance;\r\n    }\r\n    setPreviousNode(previous){\r\n        this.previousNode = previous;\r\n    }\r\n    setVisited(){\r\n        this.visited = true;\r\n    }\r\n}\r\n\r\nclass Graph{\r\n    constructor(){\r\n        this.vertexDict = {}\r\n        this.vertices = 0\r\n    }\r\n    addVertex(node){\r\n        this.vertices++\r\n        let newVertex = new Vertex(node)\r\n        this.vertexDict[node] = newVertex\r\n\r\n    }\r\n    addEdge(frm, to){\r\n        if (!(frm in this.vertexDict)){\r\n            this.addVertex(frm)\r\n        }\r\n        if (!(to in this.vertexDict)){\r\n            this.addVertex(to)\r\n        }\r\n        this.vertexDict[frm].addConnection(this.vertexDict[to])\r\n        this.vertexDict[to].addConnection(this.vertexDict[frm])\r\n    }\r\n}\r\n\r\nclass Maze{\r\n    constructor(width, height){\r\n        this.matrix = []\r\n        this.width = width + 2\r\n        this.height = height + 2\r\n        this.unvisitedNodes = []\r\n        //Mapping the maze\r\n        for (let row = 0; row < this.height; row++){\r\n            this.matrix.push([])\r\n            for (let column = 0; column < this.width; column++){\r\n                let rnd = Math.random()\r\n                     \r\n                if ((row === 0) || (row === this.height - 1) || (column === 0) || (column === this.width - 1)){\r\n                    this.matrix[row].push('1')\r\n                }\r\n                else if (rnd >= 0.5){\r\n                    this.matrix[row].push('2')\r\n                }\r\n                else{\r\n                    this.matrix[row].push('O')\r\n                    if (row !== 0 && row !== this.height-1 && column !== 0 && column !== this.width -1){\r\n                        this.unvisitedNodes.push(row*width - width + column)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let column = 0; column < this.width-1; column++){\r\n            document.getElementById('board').style.gridTemplateColumns+= \" auto\";\r\n        }\r\n        for (let row = 0; row < this.height-1; row++){\r\n            document.getElementById('board').style.gridTemplateRows+= \" auto\";\r\n        }\r\n        if (!(this.unvisitedNodes.includes(1))){\r\n            this.unvisitedNodes.push(1)\r\n        }  \r\n        if (!(this.unvisitedNodes.includes(width*height))){\r\n            this.unvisitedNodes.push(width*height)\r\n        }\r\n        this.matrix[1][1] = \"#\"\r\n        this.matrix[this.height-2][this.width-2] = \"E\"\r\n    }\r\n\r\n    getMaze(item){\r\n        for (let i = 0; i < item.length; i++){\r\n            for (let x = 0; x < item[i].length; x++){\r\n                let square = document.createElement('div');\r\n                switch(item[i][x]){\r\n                    case '1':\r\n                        square.className = 'squareB';\r\n                        break;\r\n                    case '2':\r\n                        square.className = 'squareW';\r\n                        break;\r\n                    case 'O':\r\n                        square.className = 'squareG';\r\n                        break;\r\n                    case '#':\r\n                        square.className = 'squareP';\r\n                        break;\r\n                    case 'E':\r\n                        square.className = 'squareE';\r\n                        break;\r\n                    case '@':\r\n                        square.className = 'squareO';\r\n                        break;\r\n                    default:\r\n                        break\r\n                }\r\n                document.getElementById('board').appendChild(square)\r\n            }\r\n        }\r\n    }\r\n    getGame(){\r\n        this.fastestRoute = this.bestRoute()\r\n        if (this.fastestRoute === false){\r\n            return false\r\n        }\r\n        this.getMaze(this.matrix)\r\n        this.position = [1,1]\r\n        this.userMoves = []\r\n        //The game will last until the player reaches the goal\r\n        /*\r\n        document.write(\"Good job! You cleared the maze in \" + this.userMoves.lenth.toString(10) + \" moves!\")\r\n        document.write(\"The least amount of moves required for traversing through the maze is \" + fastestRoute.toString(10) + \"!\")\r\n        return true*/\r\n        \r\n    }\r\n    bestRoute(){\r\n        let g = new Graph()\r\n        //Adding all of the vertices\r\n        for (let index = 0; index < this.unvisitedNodes.length; index++) {\r\n            g.addVertex(this.unvisitedNodes[index])         \r\n        }\r\n        var position = []\r\n        //Adding all of the possible routes/edges\r\n        for (var i = 0; i < this.unvisitedNodes.length; i++){\r\n            this.index = -1\r\n            var rounding = Math.floor(this.unvisitedNodes[i] / (this.width - 2))\r\n            if (this.unvisitedNodes[i] % (this.width - 2) === 0){\r\n                position = [rounding, this.unvisitedNodes[i] - (this.width - 2)*(rounding-1)]\r\n            }\r\n            else{\r\n                position = [rounding + 1, this.unvisitedNodes[i] - rounding*(this.width - 2)]\r\n            }\r\n            while(true){\r\n                var newPosition = this.validInput(position, null, \"bestRoute\")\r\n                if (!newPosition){\r\n                    break\r\n                }\r\n                g.addEdge(this.width*(position[0]-1) + position[1] - 2*position[0] + 2, this.width*(newPosition[0]-1) + newPosition[1] - 2*newPosition[0] + 2)\r\n            }\r\n        }\r\n        return this.djikstra(g, g.vertexDict[1])\r\n    }\r\n    djikstra(graph, startNode){\r\n        startNode.setDistance(0)\r\n        var vertex = startNode\r\n        vertex.setPreviousNode(vertex)\r\n        var queue = []\r\n        queue.push(vertex)\r\n        //Algorithm for finding the shortest path from a start node\r\n        while (graph.vertexDict[(this.width-2)*(this.height-2)].distance === 9007199254740992){\r\n            vertex = queue[0]\r\n            for(var i = 0; i < vertex.connections.length; i++){\r\n                if (vertex.connections[i].previousNode === null || vertex.distance + vertex.connections[i].connections[vertex] < vertex.connections[i].distance){\r\n                    queue.push(vertex.connections[i])\r\n                    vertex.connections[i].setPreviousNode(vertex)\r\n                    vertex.connections[i].setDistance(vertex.distance + 1)\r\n                }\r\n            }\r\n            vertex.setVisited()\r\n            queue.shift()\r\n\r\n            if (queue.length === 0){\r\n                break\r\n            }\r\n        }\r\n        if (graph.vertexDict[(this.width-2)*(this.height-2)].distance === 9007199254740992){\r\n            return false\r\n        }\r\n        else{\r\n            return graph.vertexDict[(this.width-2)*(this.height-2)].distance\r\n        }\r\n    }\r\n    getValidMoves(){\r\n        var validMoves = [\"w\", \"a\", \"s\", \"d\", \"wa\", \"wd\", \"as\", \"sd\"]\r\n        this.index++\r\n        if (this.index === validMoves.length){\r\n            return false\r\n        }\r\n        else{\r\n            return validMoves[this.index]\r\n        }\r\n    }\r\n    validInput(position, userMoves = null, bestRoute = null, userInput = null){\r\n        while(true){\r\n            if (bestRoute != null){\r\n                userInput = this.getValidMoves()\r\n                if (userInput === false){\r\n                    return false\r\n                }\r\n            }\r\n            //Check if the user move is valid or not\r\n            if (userInput === \"w\"){\r\n                if (position[0] !== 1 && this.matrix[position[0]-1][position[1]] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0]-1, position[1]])\r\n                    }\r\n                    return [position[0]-1, position[1]]\r\n                }\r\n            }\r\n            else if (userInput === \"a\"){\r\n                if (position[1] !== 1 && this.matrix[position[0]][position[1]-1] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0], position[1]-1])\r\n                    }\r\n                    return [position[0], position[1]-1]\r\n                }\r\n            }\r\n            else if (userInput === \"s\"){\r\n                if (position[0] !== this.height-2 && this.matrix[position[0]+1][position[1]] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0]+1, position[1]])\r\n                    }\r\n                    return [position[0]+1, position[1]]\r\n                }\r\n            }\r\n            else if (userInput === \"d\"){\r\n                if (position[1] !== this.width-2 && this.matrix[position[0]][position[1]+1] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0], position[1]+1])\r\n                    }\r\n                    return [position[0], position[1]+1]\r\n                }\r\n            }\r\n            else if (userInput === \"wd\"){\r\n                if (position[0] !== 1 && position[1] !== this.width-2 && this.matrix[position[0]-1][position[1]+1] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0]-1, position[1]+1])\r\n                    }\r\n                    return [position[0]-1, position[1]+1]\r\n                }\r\n            }\r\n            else if (userInput === \"wa\"){\r\n                if (position[0] !== 1 && position[1] !== 1 && this.matrix[position[0]-1][position[1]-1] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0]-1, position[1]-1])\r\n                    }\r\n                    return [position[0]-1, position[1]-1]\r\n                }\r\n            }\r\n            else if (userInput === \"as\"){\r\n                if (position[1] !== 1 && position[0] !== this.height-2 && this.matrix[position[0]+1][position[1]-1] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0]+1, position[1]-1])\r\n                    }\r\n                    return [position[0]+1, position[1]-1]\r\n                }\r\n            }\r\n            else if (userInput === \"sd\"){\r\n                if (position[0] !== this.height-2 && position[1] !== this.width-2 && this.matrix[position[0]+1][position[1]+1] !== '2'){\r\n                    if (userMoves != null){\r\n                        userMoves.push([position[0]+1, position[1]+1])\r\n                    }\r\n                    return [position[0]+1, position[1]+1]\r\n                }\r\n            }\r\n            else if (userInput === \"b\"){\r\n                if (userMoves.length !== 0){\r\n                    userMoves.pop()\r\n                    this.matrix[position[0]][position[1]] = \"O\" \r\n                    if (userMoves.length !== 0){\r\n                        return userMoves[userMoves.length-1]\r\n                    }\r\n                    else{\r\n                        return [1,1]\r\n                    }\r\n                }\r\n            }\r\n            return position\r\n        }\r\n    }\r\n}\r\n\r\nfunction Begin(){\r\n    const myNode = document.getElementById(\"board\");\r\n    document.getElementById('board').style.gridTemplateColumns=\"auto\";\r\n    document.getElementById('board').style.gridTemplateRows=\"auto\";\r\n    while (myNode.firstChild) {\r\n        myNode.removeChild(myNode.firstChild);\r\n    }\r\n    game = new Maze(30,20)\r\n    document.getElementById(\"buttons\").style.display = \"grid\";\r\n    if(game.getGame() === false){\r\n        return Begin()\r\n    }\r\n    document.getElementById(\"beginDiv\").style.gridColumn = \"1\"\r\n}\r\n\r\nfunction Direction(dir){\r\n    let positionNotChanged = game.position\r\n    game.matrix[game.position[0]][game.position[1]] = \"@\"\r\n    game.position = game.validInput(game.position, game.userMoves, null, dir)\r\n    if (game.position!==positionNotChanged){\r\n        game.matrix[game.position[0]][game.position[1]] = '#'\r\n        const myNode = document.getElementById(\"board\");\r\n        while (myNode.firstChild) {\r\n            myNode.removeChild(myNode.firstChild);\r\n        }\r\n        game.getMaze(game.matrix)\r\n    }\r\n    if ((game.position[0] === game.height-2) && (game.position[1] === game.width-2)){\r\n        document.getElementById(\"winning\").innerHTML = \"You cleared the maze in \" + game.userMoves.length + \" moves. The fastest route requires \" + game.fastestRoute + \" moves.\" \r\n        document.getElementById(\"winning\").style.visibility = \"visible\";\r\n    }\r\n}\r\n\r\nconst func = {\r\n    Begin,\r\n    Direction,\r\n}\r\n\r\nexport default func","import React from \"react\"\r\nimport func from \"./mainComp/theGame\"\r\n\r\n\r\nfunction Main(props){\r\n    return(\r\n        <div className=\"game\">\r\n            <div id=\"beginDiv\">\r\n                <button className=\"buttonBegin\" onClick={func.Begin}>Begin</button>\r\n            </div>\r\n            <div id=\"board\"></div>\r\n\r\n            <div id=\"buttons\">\r\n                <button className=\"button\" onClick={() => func.Direction(\"wa\")}>Up-Left</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"w\")} >Up</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"wd\")} >Up-Right</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"a\")} >Left</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"b\")} >Back</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"d\")} >Right</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"as\")} >Down-Left</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"s\")} >Down</button>\r\n                <button className=\"button\" onClick={() => func.Direction(\"sd\")} >Down-Right</button>\r\n            </div>\r\n            <div id=\"winning\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Main","import React from \"react\"\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div className=\"footer\">\r\n            test\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import './App.css';\nimport React from \"react\"\nimport Header from \"./components/header\"\nimport Main from \"./components/main\"\nimport Footer from \"./components/footer\"\n\nclass App extends React.Component{\n  constructor(){\n    super()\n\n  }\n  render(){\n    return(\n      <div className=\"page\">\n        <noscript>Your browser doesn't support or has disabled javascripts</noscript>\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    )\n  }\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}